
package com.objis.demo.tp13.client.wsimport;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SoapServer", targetNamespace = "http://soap.tp13.demo.objis.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SoapServer {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "home", targetNamespace = "http://soap.tp13.demo.objis.com/", className = "com.objis.demo.tp13.client.wsimport.Home")
    @ResponseWrapper(localName = "homeResponse", targetNamespace = "http://soap.tp13.demo.objis.com/", className = "com.objis.demo.tp13.client.wsimport.HomeResponse")
    @Action(input = "http://soap.tp13.demo.objis.com/SoapServer/homeRequest", output = "http://soap.tp13.demo.objis.com/SoapServer/homeResponse")
    public String home();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getJsonSwagger", targetNamespace = "http://soap.tp13.demo.objis.com/", className = "com.objis.demo.tp13.client.wsimport.GetJsonSwagger")
    @ResponseWrapper(localName = "getJsonSwaggerResponse", targetNamespace = "http://soap.tp13.demo.objis.com/", className = "com.objis.demo.tp13.client.wsimport.GetJsonSwaggerResponse")
    @Action(input = "http://soap.tp13.demo.objis.com/SoapServer/getJsonSwaggerRequest", output = "http://soap.tp13.demo.objis.com/SoapServer/getJsonSwaggerResponse")
    public String getJsonSwagger();

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sayHello", targetNamespace = "http://soap.tp13.demo.objis.com/", className = "com.objis.demo.tp13.client.wsimport.SayHello")
    @ResponseWrapper(localName = "sayHelloResponse", targetNamespace = "http://soap.tp13.demo.objis.com/", className = "com.objis.demo.tp13.client.wsimport.SayHelloResponse")
    @Action(input = "http://soap.tp13.demo.objis.com/SoapServer/sayHelloRequest", output = "http://soap.tp13.demo.objis.com/SoapServer/sayHelloResponse")
    public String sayHello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getYamlSwagger", targetNamespace = "http://soap.tp13.demo.objis.com/", className = "com.objis.demo.tp13.client.wsimport.GetYamlSwagger")
    @ResponseWrapper(localName = "getYamlSwaggerResponse", targetNamespace = "http://soap.tp13.demo.objis.com/", className = "com.objis.demo.tp13.client.wsimport.GetYamlSwaggerResponse")
    @Action(input = "http://soap.tp13.demo.objis.com/SoapServer/getYamlSwaggerRequest", output = "http://soap.tp13.demo.objis.com/SoapServer/getYamlSwaggerResponse")
    public String getYamlSwagger();

    /**
     * 
     * @param message
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "displayMessage", targetNamespace = "http://soap.tp13.demo.objis.com/", className = "com.objis.demo.tp13.client.wsimport.DisplayMessage")
    @ResponseWrapper(localName = "displayMessageResponse", targetNamespace = "http://soap.tp13.demo.objis.com/", className = "com.objis.demo.tp13.client.wsimport.DisplayMessageResponse")
    @Action(input = "http://soap.tp13.demo.objis.com/SoapServer/displayMessageRequest", output = "http://soap.tp13.demo.objis.com/SoapServer/displayMessageResponse")
    public String displayMessage(
        @WebParam(name = "message", targetNamespace = "")
        String message);

}
